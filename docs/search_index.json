[
["poverty-point-type-varieties.html", "Chapter 5 Poverty Point type-varieties 5.1 Gary varieties proposed by Ford and Webb (1956) 5.2 Assign Gary type-varieties proposed by Ford and Webb (1956) 5.3 Boxplots for Ford and Webb’s (1956) type-varieties of Gary dart points from Poverty Point 5.4 Principal Components Analysis for Ford and Webb’s (1956) type-varieties at Poverty Point 5.5 Density plots for variables by type-varieties 5.6 Analyses of Variance (ANOVA) for linear variables ~ type-varieties", " Chapter 5 Poverty Point type-varieties # install required analysis packages #devtools::install_github(&quot;tidyverse/tidyverse&quot;) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;kassambara/ggpubr&quot;) #devtools::install_github(&#39;sinhrks/ggfortify&#39;) # load libraries library(tidyverse) ## -- Attaching packages ----------------------------------------------------------------------------------------------------- tidyverse 1.3.0 -- ## v ggplot2 3.3.2 v purrr 0.3.4 ## v tibble 3.0.3 v dplyr 1.0.2 ## v tidyr 1.1.2 v stringr 1.4.0 ## v readr 1.3.1 v forcats 0.5.0 ## -- Conflicts -------------------------------------------------------------------------------------------------------- tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(RRPP) library(ggpubr) library(ggfortify) library(cluster) library(wesanderson) 5.1 Gary varieties proposed by Ford and Webb (1956) The tv1 argument used within this chapter articulates with three variants of the Gary type that include Large, Medium/Typical, and Small that were assigned using those morphological criteria first advanced by Ford, Phillips, and Haag (1955) at the Jaketown site, and later refined by Ford and Webb (1956) at Poverty Point. # set working directory setwd(getwd()) # load data data&lt;-read.csv(&quot;garymorphlm.csv&quot;,header = TRUE, as.is=TRUE) Each of the three type-varieties proposed by Ford and Webb (1956) was based upon a suite of morphological criteria that can be systematically replicated, and a function was used to assign each of the Gary points to the correct type-variety. Gary type varieties range between 80 and 140 mm in maxl, and between 30 and 42 mm in maxw for Gary Large; between 46 to 79 mm in maxl. Ford and Webb (1956) also noted ranges in width and thickness values, which they did not use to make their assignments. Those range between 20 and 45 mm in maxw for Gary Medium/Typical; and between 33 to 45 mm in maxl, 19 to 32 mm in maxw, and five to 10 mm in maxth for Gary Small (Ford and Webb 1956). # Ford and Webb (1956) fwebbl&lt;-data.frame(Name=c(&#39;var.GaryLarge&#39;,&#39;var.GaryMed/Typical&#39;,&#39;var.GarySmall&#39;), Length=c(80,46,30), # in mm (Gary Small changed from 33 to 30) end=c(140,80,45) # in mm ) fwebblength&lt;-ggplot(fwebbl,aes(x=Length,xend=end,y=Name,yend=Name,color=Name)) + geom_segment(size=2) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) fwebbw&lt;-data.frame(Name=c(&#39;var.GaryLarge&#39;,&#39;var.GaryMed/Typical&#39;,&#39;var.GarySmall&#39;), Width=c(30,20,19), # in mm end=c(42,45,32) # in mm ) fwebbwidth&lt;-ggplot(fwebbw,aes(x=Width,xend=end,y=Name,yend=Name,color=Name)) + geom_segment(size=2) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) # thickness values were not precisely reported for GaryLarge and GaryTypical, and are included here for reference only fwebbth&lt;-data.frame(Name=c(&#39;var.GaryLarge&#39;,&#39;var.GaryMed/Typical&#39;,&#39;var.GarySmall&#39;), Thickness=c(12.9,9,5), # in mm (actual thickness of var. GaryLarge is 13. Plotted as 12.9-13.1 so that it shows on chart) end=c(13.1,10,10) # in mm ) fwebbthickness&lt;-ggplot(fwebbth,aes(x=Thickness,xend=end,y=Name,yend=Name,color=Name)) + geom_segment(size=2) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) # render figure fwebbfig&lt;-ggarrange(fwebblength,fwebbwidth,fwebbthickness, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;), ncol = 1, nrow = 3) fwebbfig Figure 5.1: Gantt charts illustrating the range of linear measurements for each type-variety reported by Ford and Webb (1956). 5.2 Assign Gary type-varieties proposed by Ford and Webb (1956) Ford and Webb (1956) used a single metric (maximum length) to assign Gary varieties at the Poverty Point site. The approach empoyed here enlists all of Ford and Webb’s (1956) reported metrics, including maximum length and maximum width for all varieties, coupled with maximum thickness for Gary Small. No metrics were reported for Gary Long, which was omitted from this analysis. Those points that do not match with one of the three criteria were assigned as Gary no variety (Gnv), and, for the purpose of this undertaking, are considered to be Gary dart points with no type-variety assignment. # subset poverty point data pvptmx&lt;-subset(data,Site==&quot;Pov Pt&quot;,select=maxl:maxstw) # assign varieties based upon reported metrics in Ford and Webb [1956] lcheck1 &lt;- pvptmx$maxl &gt;= 80 &amp; pvptmx$maxl &lt;= 140 lcheck2 &lt;- pvptmx$maxl &gt;= 46 &amp; pvptmx$maxl &lt; 80 lcheck3 &lt;- pvptmx$maxl &gt;= 30 &amp; pvptmx$maxl &lt; 46 pvptmx$tv1 &lt;- &quot;Gnv&quot; # = Gary points (no variety) pvptmx$tv1 &lt;- ifelse(lcheck1, &quot;L&quot;, pvptmx$tv1) pvptmx$tv1 &lt;- ifelse(lcheck2, &quot;M/T&quot;, pvptmx$tv1) pvptmx$tv1 &lt;- ifelse(lcheck3, &quot;S&quot;, pvptmx$tv1) tv1&lt;-pvptmx$tv1 tv1 ## [1] &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [13] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [25] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [37] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [49] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; ## [61] &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; ## [73] &quot;S&quot; &quot;S&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [85] &quot;S&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; ## [97] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [109] &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [121] &quot;L&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; ## [133] &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; ## [145] &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; ## [157] &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; ## [169] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; ## [181] &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;L&quot; ## [193] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [205] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [217] &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; ## [229] &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;L&quot; &quot;L&quot; &quot;M/T&quot; &quot;L&quot; &quot;L&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; ## [241] &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [253] &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; ## [265] &quot;L&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [277] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [289] &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; ## [301] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [313] &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; ## [325] &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;L&quot; &quot;M/T&quot; &quot;S&quot; &quot;M/T&quot; ## [337] &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;L&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; ## [349] &quot;M/T&quot; &quot;S&quot; &quot;S&quot; &quot;S&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; &quot;M/T&quot; 5.3 Boxplots for Ford and Webb’s (1956) type-varieties of Gary dart points from Poverty Point # boxplot of maximum length pvptmaxl &lt;- ggplot(pvptmx, aes(x = tv1, y = maxl, color = tv1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Type-Variety&#39;, y = &#39;Max Length&#39;) # boxplot of maximum width pvptmaxw &lt;- ggplot(pvptmx, aes(x = tv1, y = maxw, color = tv1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Type-Variety&#39;, y = &#39;Max Width&#39;) # boxplot of maximum thickness pvptmaxth &lt;- ggplot(pvptmx, aes(x = tv1, y = maxth, color = tv1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Type-Variety&#39;, y = &#39;Max Thick&#39;) # boxplot of maximum stem length pvptmaxstl &lt;- ggplot(pvptmx, aes(x = tv1, y = maxstl, color = tv1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Type-Variety&#39;, y = &#39;Stem Length&#39;) # boxplot of stem width pvptmaxstw &lt;- ggplot(pvptmx, aes(x = tv1, y = maxstw, color = tv1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Type-Variety&#39;, y = &#39;Stem Width&#39;) # render figure ppfigure&lt;-ggarrange(pvptmaxl,pvptmaxw,pvptmaxth,pvptmaxstl,pvptmaxstw, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;), ncol = 3, nrow = 2) ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. # plot figure ppfigure Figure 5.2: Boxplots for a, maximum length; b, width; c, thickness; d, stem length; and e, stem width for Gary dart points from the Poverty Point site. 5.4 Principal Components Analysis for Ford and Webb’s (1956) type-varieties at Poverty Point #pca df &lt;- pvptmx[c(1:5)] autoplot(prcomp(df), data = pvptmx, colour = &#39;tv1&#39;, loadings = TRUE, loadings.colour = &#39;blue&#39;, loadings.label = TRUE, loadings.label.size = 3, frame = TRUE) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) ## Warning: `select_()` is deprecated as of dplyr 0.7.0. ## Please use `select()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_warnings()` to see where this warning was generated. ## Warning: `group_by_()` is deprecated as of dplyr 0.7.0. ## Please use `group_by()` instead. ## See vignette(&#39;programming&#39;) for more help ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_warnings()` to see where this warning was generated. Figure 5.3: PCA by Gary type-varieties reported by Ford and Webb (1956) at Poverty Point. 5.5 Density plots for variables by type-varieties 5.5.1 Density plot for maximum length by tv1 # define variables in poverty point subset pp.maxl &lt;- pvptmx$maxl pp.maxw &lt;- pvptmx$maxw pp.maxth &lt;- pvptmx$maxth pp.maxstl &lt;- pvptmx$maxstl pp.maxstw &lt;- pvptmx$maxstw pp.tv1 &lt;-pvptmx$tv1 pch.gps.gp &lt;- c(15,17,19)[as.factor(pp.tv1)] col.gps.gp &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(pp.tv1)] # density plot of maxl by tv1 ggplot(pvptmx, aes(x=pp.maxl, fill = pp.tv1, colour = pp.tv1)) + geom_density(alpha = .4) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(20,115) + #full range of variation included in the linear measurements associated with type-varieties labs(x = &#39;Max Length&#39;, y = &#39;density&#39;) 5.5.2 Density plot for maximum width by tv1 # density plot of maxw by tv1 ggplot(pvptmx, aes(x=pp.maxw, fill = pp.tv1, colour = pp.tv1)) + geom_density(alpha = .4) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(5,55) + labs(x = &#39;Max Width&#39;, y = &#39;density&#39;) 5.5.3 Density plot for maximum thickness by tv1 # density plot of maxth by tv1 ggplot(pvptmx, aes(x=pp.maxth, fill = pp.tv1, colour = pp.tv1)) + geom_density(alpha = .4) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(0,25) + labs(x = &#39;Max Thickness&#39;, y = &#39;density&#39;) 5.5.4 Density plot for maximum stem length by tv1 # density plot of maxstl by tv1 ggplot(pvptmx, aes(x=pp.maxstl, fill = pp.tv1, colour = pp.tv1)) + geom_density(alpha = .4) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(0,30) + labs(x = &#39;Max Stem Length&#39;, y = &#39;density&#39;) ## Warning: Removed 1 rows containing non-finite values (stat_density). 5.5.5 Density plot for maximum stem width by tv1 # density plot of maxstw by tv1 ggplot(pvptmx, aes(x=pp.maxstw, fill = pp.tv1, colour = pp.tv1)) + geom_density(alpha = .4) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + xlim(5,35) + labs(x = &#39;Max Stem Width&#39;, y = &#39;density&#39;) 5.6 Analyses of Variance (ANOVA) for linear variables ~ type-varieties 5.6.1 Maximum length ~ type-variety at Poverty Point # anova = maximum length ~ tv1 t1ml &lt;- lm.rrpp(pp.maxl ~ pp.tv1, SS.type = &quot;I&quot;, data = pvptmx, iter = 9999, print.progress = FALSE) anova(t1ml) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## pp.tv1 2 40034 20016.9 0.66482 350.09 5.0205 1e-04 *** ## Residuals 353 20184 57.2 0.33518 ## Total 355 60217 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = pp.maxl ~ pp.tv1, iter = 9999, SS.type = &quot;I&quot;, data = pvptmx, ## print.progress = FALSE) # visualise model predictions for maximum length ~ type-variety at poverty point pp.tvDF &lt;- data.frame(pp.tv1 = c(&quot;L&quot;,&quot;M/T&quot;,&quot;S&quot;)) rownames(pp.tvDF) &lt;- c(&quot;L&quot;,&quot;M/T&quot;,&quot;S&quot;) ppPreds &lt;- predict(t1ml, pp.tvDF) ppPreds ## ## Linear Model fit with lm.rrpp ## ## Number of predictions: 3 ## Confidence level: 95 % ## Number of bootstrap permutations: 10000 ## ## Predicted values: ## ## [,1] ## L 86.09358 ## M/T 58.80961 ## S 40.63729 ## ## ## 95 % Lower confidence limits: ## ## [,1] ## L 83.09350 ## M/T 57.87951 ## S 38.97792 ## ## ## 95 % Upper confidence limits: ## ## [,1] ## L 89.32400 ## M/T 59.73807 ## S 42.32322 plot(ppPreds, col = 1:NROW(pp.tvDF)) # pairwise comparison of LS means = which differ? pp.ml &lt;- pairwise(t1ml, groups = pvptmx$tv1) summary(pp.ml, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 27.27708 5.679481 14.14564 1e-04 ## L:S 45.46201 6.149198 22.17871 1e-04 ## M/T:S 18.18494 3.275978 16.46421 1e-04 # pairwise distance between variances = standardization? summary(pp.ml, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## L M/T S ## 37.79922 69.66147 18.81734 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 31.86225 31.45248 1.9260070 0.0469 ## L:S 18.98187 34.52970 0.4480139 0.2855 ## M/T:S 50.84413 19.03020 7.3458951 0.0001 5.6.2 Maximum width ~ type-variety at Poverty Point # anova = maximum width ~ tv1 t1mw &lt;- lm.rrpp(pp.maxw ~ pp.tv1, SS.type = &quot;I&quot;, data = pvptmx, iter = 9999, print.progress = FALSE) anova(t1mw) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## pp.tv1 2 2087.1 1043.57 0.22969 52.627 3.5338 1e-04 *** ## Residuals 353 6999.8 19.83 0.77031 ## Total 355 9086.9 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = pp.maxw ~ pp.tv1, iter = 9999, SS.type = &quot;I&quot;, data = pvptmx, ## print.progress = FALSE) # visualise model predictions for maximum width ~ type-variety at poverty point ppPreds &lt;- predict(t1mw, pp.tvDF) ppPreds ## ## Linear Model fit with lm.rrpp ## ## Number of predictions: 3 ## Confidence level: 95 % ## Number of bootstrap permutations: 10000 ## ## Predicted values: ## ## [,1] ## L 32.55201 ## M/T 29.11806 ## S 23.85738 ## ## ## 95 % Lower confidence limits: ## ## [,1] ## L 30.77068 ## M/T 28.57832 ## S 22.87673 ## ## ## 95 % Upper confidence limits: ## ## [,1] ## L 34.47715 ## M/T 29.66877 ## S 24.85183 plot(ppPreds, col = 1:NROW(pp.tvDF)) # pairwise comparison of LS means = which differ? pp.mw &lt;- pairwise(t1mw, groups = pvptmx$tv1) summary(pp.mw, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 3.424897 2.183097 3.768645 0.0021 ## L:S 8.690844 2.347935 10.610585 0.0001 ## M/T:S 5.265947 1.289978 11.879808 0.0001 # pairwise distance between variances = standardization? summary(pp.mw, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## L M/T S ## 25.65123 20.36683 15.60002 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 5.284408 14.105578 -0.1231195 0.4753 ## L:S 10.051216 15.445634 0.7584288 0.1999 ## M/T:S 4.766808 8.176593 0.5330548 0.2668 5.6.3 Maximum thickness ~ type-variety at Poverty Point # anova = maximum thickness ~ tv1 t1mth &lt;- lm.rrpp(pp.maxth ~ pp.tv1, SS.type = &quot;I&quot;, data = pvptmx, iter = 9999, print.progress = FALSE) anova(t1mth) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## pp.tv1 2 169.51 84.756 0.10666 21.074 2.8564 1e-04 *** ## Residuals 353 1419.73 4.022 0.89334 ## Total 355 1589.24 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = pp.maxth ~ pp.tv1, iter = 9999, SS.type = &quot;I&quot;, data = pvptmx, ## print.progress = FALSE) # visualise model predictions for maximum thickness ~ type-variety at poverty point ppPreds &lt;- predict(t1mth, pp.tvDF) ppPreds ## ## Linear Model fit with lm.rrpp ## ## Number of predictions: 3 ## Confidence level: 95 % ## Number of bootstrap permutations: 10000 ## ## Predicted values: ## ## [,1] ## L 11.853839 ## M/T 10.491897 ## S 9.125232 ## ## ## 95 % Lower confidence limits: ## ## [,1] ## L 11.062097 ## M/T 10.247445 ## S 8.689518 ## ## ## 95 % Upper confidence limits: ## ## [,1] ## L 12.751626 ## M/T 10.736728 ## S 9.589332 plot(ppPreds, col = 1:NROW(pp.tvDF)) # pairwise comparison of LS means = which differ? pp.mth &lt;- pairwise(t1mth, groups = pvptmx$tv1) summary(pp.mth, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 1.365366 0.9091353 3.554920 0.0034 ## L:S 2.735195 0.9992370 7.585356 0.0001 ## M/T:S 1.369829 0.5302730 7.025201 0.0001 # pairwise distance between variances = standardization? summary(pp.mth, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## L M/T S ## 5.145965 4.191226 2.978879 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 0.9547397 3.796221 -0.3815466 0.5857 ## L:S 2.1670865 3.985188 0.4970578 0.2423 ## M/T:S 1.2123467 2.003585 0.5971411 0.2491 5.6.4 Maximum stem length ~ type-variety at Poverty Point # anova = maximum stem length ~ tv1 t1mstl &lt;- lm.rrpp(pp.maxstl ~ pp.tv1, SS.type = &quot;I&quot;, data = pvptmx, iter = 9999, print.progress = FALSE) anova(t1mstl) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## pp.tv1 2 1081.1 540.54 0.21341 47.887 3.4189 1e-04 *** ## Residuals 353 3984.6 11.29 0.78659 ## Total 355 5065.7 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = pp.maxstl ~ pp.tv1, iter = 9999, SS.type = &quot;I&quot;, ## data = pvptmx, print.progress = FALSE) # visualise model predictions for maximum stem length ~ type-variety at poverty point ppPreds &lt;-predict(t1mstl, pp.tvDF) ppPreds ## ## Linear Model fit with lm.rrpp ## ## Number of predictions: 3 ## Confidence level: 95 % ## Number of bootstrap permutations: 10000 ## ## Predicted values: ## ## [,1] ## L 20.60740 ## M/T 16.06846 ## S 13.11195 ## ## ## 95 % Lower confidence limits: ## ## [,1] ## L 19.24375 ## M/T 15.66345 ## S 12.35483 ## ## ## 95 % Upper confidence limits: ## ## [,1] ## L 22.04193 ## M/T 16.47716 ## S 13.87146 plot(ppPreds, col = 1:NROW(pp.tvDF)) # pairwise comparison of LS means = which differ? pp.mstl &lt;- pairwise(t1mstl, groups = pvptmx$tv1) summary(pp.mstl, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 4.539607 1.650492 7.621466 1e-04 ## L:S 7.497403 1.816244 12.055362 1e-04 ## M/T:S 2.957795 0.975337 8.516404 1e-04 # pairwise distance between variances = standardization? summary(pp.mstl, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## L M/T S ## 16.333665 11.359303 9.167638 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 4.974362 7.585557 0.8008084 0.1841 ## L:S 7.166028 8.267754 1.4982030 0.0855 ## M/T:S 2.191666 4.440434 0.2617946 0.3461 5.6.5 Maximum stem width ~ type-variety at Poverty Point # anova = maximum stem width ~ tv1 t1mstw &lt;- lm.rrpp(pp.maxstw ~ pp.tv1, SS.type = &quot;I&quot;, data = pvptmx, iter = 9999, print.progress = FALSE) anova(t1mstw) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## pp.tv1 2 910.9 455.46 0.17604 37.709 3.302 1e-04 *** ## Residuals 353 4263.6 12.08 0.82396 ## Total 355 5174.5 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = pp.maxstw ~ pp.tv1, iter = 9999, SS.type = &quot;I&quot;, ## data = pvptmx, print.progress = FALSE) # visualise model predictions for maximum stem length ~ type-variety at poverty point ppPreds &lt;- predict(t1mstw, pp.tvDF) ppPreds ## ## Linear Model fit with lm.rrpp ## ## Number of predictions: 3 ## Confidence level: 95 % ## Number of bootstrap permutations: 10000 ## ## Predicted values: ## ## [,1] ## L 24.64469 ## M/T 20.79736 ## S 17.92179 ## ## ## 95 % Lower confidence limits: ## ## [,1] ## L 23.24781 ## M/T 20.37627 ## S 17.15807 ## ## ## 95 % Upper confidence limits: ## ## [,1] ## L 26.10731 ## M/T 21.22954 ## S 18.69916 plot(ppPreds, col = 1:NROW(pp.tvDF)) # pairwise comparison of LS means = which differ? pp.mstw &lt;- pairwise(t1mstw, groups = pvptmx$tv1) summary(pp.mstw, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 3.846102 1.683761 6.188505 1e-04 ## L:S 6.725195 1.833718 10.603311 1e-04 ## M/T:S 2.879093 0.978834 8.184337 1e-04 # pairwise distance between variances = standardization? summary(pp.mstw, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: L M/T S ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## L M/T S ## 9.047734 12.692007 10.424996 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## L:M/T 3.644273 7.054866 0.3279349 0.3185 ## L:S 1.377262 7.710567 -0.7409485 0.7267 ## M/T:S 2.267011 4.132343 0.4615211 0.2850 References "]
]
