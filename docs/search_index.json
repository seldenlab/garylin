[
["jaketown-type-varieties.html", "Chapter 4 Jaketown type-varieties 4.1 Reconstructing Gary type-varieties 4.2 Gary varieties proposed by Ford, Phillips, and Haag (1955) 4.3 Assign Gary type-varieties proposed by Ford, Phillips, and Haag (1955) 4.4 Boxplots for site by Ford, Phillips, and Haag’s (1955) Gary type-varieties 4.5 Density plots for variables by type-varieties 4.6 Principal Components Analysis for Ford, Phillips, and Haag’s (1955) type-varieties at all sites 4.7 Analyses of Variance (ANOVA) for linear variables ~ type-varieties", " Chapter 4 Jaketown type-varieties 4.1 Reconstructing Gary type-varieties Reconstructing and expanding the type-varieties of Gary dart points proposed at Poverty Point, Cooper, and Means was necessary, as the type-variety assignments for each specimen were not reported or preserved on the associated paperwork when the collections were curated. Additionally, the collection of Gary dart points at Poverty Point has continued to grow, and this method provides a replicable means of assigning each new specimen to the previously-established type-varieties. # install required analysis packages #devtools::install_github(&quot;tidyverse/tidyverse&quot;) #devtools::install_github(&quot;rich-iannone/DiagrammeR&quot;) #devtools::install_github(&quot;vqv/ggbiplot&quot;) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;kassambara/ggpubr&quot;) #devtools::install_github(&#39;sinhrks/ggfortify&#39;) # load libraries library(tidyverse) ## -- Attaching packages -------------------------- tidyverse 1.3.0.9000 -- ## v ggplot2 3.3.0.9000 v purrr 0.3.3 ## v tibble 2.1.3 v dplyr 0.8.5 ## v tidyr 1.0.2 v stringr 1.4.0 ## v readr 1.3.1 v forcats 0.5.0 ## -- Conflicts ---------------------------------- tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(dplyr) library(DiagrammeR) library(ggbiplot) ## Loading required package: plyr ## ------------------------------------------------------------------------------ ## You have loaded plyr after dplyr - this is likely to cause problems. ## If you need functions from both plyr and dplyr, please load plyr first, then dplyr: ## library(plyr); library(dplyr) ## ------------------------------------------------------------------------------ ## ## Attaching package: &#39;plyr&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## arrange, count, desc, failwith, id, mutate, rename, summarise, ## summarize ## The following object is masked from &#39;package:purrr&#39;: ## ## compact ## Loading required package: scales ## ## Attaching package: &#39;scales&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## discard ## The following object is masked from &#39;package:readr&#39;: ## ## col_factor ## Loading required package: grid library(RRPP) library(ggpubr) ## Loading required package: magrittr ## ## Attaching package: &#39;magrittr&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## set_names ## The following object is masked from &#39;package:tidyr&#39;: ## ## extract ## ## Attaching package: &#39;ggpubr&#39; ## The following object is masked from &#39;package:plyr&#39;: ## ## mutate library(ggfortify) ## ## Attaching package: &#39;ggfortify&#39; ## The following object is masked from &#39;package:ggbiplot&#39;: ## ## ggbiplot library(cluster) 4.1.1 Set wd, and load data # set working directory setwd(getwd()) # load data data&lt;-read.csv(&quot;garymorphlm.csv&quot;,header = TRUE, as.is=TRUE) 4.2 Gary varieties proposed by Ford, Phillips, and Haag (1955) The tv0 argument used within this and the subsequent section articulates with three variants of the Gary type–including Gary Stemmed, Typical Gary Stemmed, Broad Gary Stemmed, Thin Gary Stemmed, and Small Gary Stemmed, which were assigned using those morphological criteria advanced by Ford, Phillips, and Haag (1955) at the Jaketown site in west central Mississippi. The Long Gary Stemmed type was omitted from consideration due to the absence of reported metrics. # Ford, Phillips, and Haag (1955) fphl&lt;-data.frame(Name=c(&#39;var.GaryStemmed&#39;,&#39;var.TypicalGaryStemmed&#39;,&#39;var.BroadGaryStemmed&#39;,&#39;var.ThinGaryStemmed&#39;,&#39;var.SmallGaryStemmed&#39;), Length=c(45,45,45,55,35), # in mm end=c(70,79,70,75,50) # in mm ) fphlength&lt;-ggplot(fphl,aes(x=Length,xend=end,y=Name,yend=Name,color=Name)) + geom_segment(size=2) + scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) fphw&lt;-data.frame(Name=c(&#39;var.GaryStemmed&#39;,&#39;var.TypicalGaryStemmed&#39;,&#39;var.BroadGaryStemmed&#39;,&#39;var.ThinGaryStemmed&#39;,&#39;var.SmallGaryStemmed&#39;), Width=c(22,22,32,30,20), # in mm end=c(31,31,48,36,30) # in mm ) fphwidth&lt;-ggplot(fphw,aes(x=Width,xend=end,y=Name,yend=Name,color=Name)) + geom_segment(size=2) + scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) # render figure fphfig&lt;-ggarrange(fphlength,fphwidth, labels = c(&quot;a&quot;,&quot;b&quot;), ncol = 1, nrow = 2) fphfig Figure 4.1: Gantt charts illustrating the range of linear measurements for each type-variety reported by Ford, Phillips, and Haag (1955). 4.3 Assign Gary type-varieties proposed by Ford, Phillips, and Haag (1955) Ford, Phillips, and Haag (1955) used a series of metrics to assign Gary varieties at the Jaketown site. The approach empoyed here enlists the full range of reported metrics, and applies those to each of the points. Any points that do not articulate with one of the three criteria were assigned as Gary no variety (Gnv), and, for the purpose of this undertaking, are considered to be Gary dart points with no type-variety assignment. Due to the degree of overlap in the ranges associated with the Gary type-varieties advanced by Ford, Phillips, and Haag (1956), it is expected that Gary Stemmed will fall out due to overlap in length with Broad Gary Stemmed, and overlap in width with Typical Gary Stemmed. # logic graph that visualizes the process of sorting the sample grViz(&quot; digraph{ node[shape = ellipse fontname = lato penwidth = 0.2 style = filled fillcolor = White] Gary node[shape = circle fontname = lato style = filled fillcolor = WhiteSmoke] 45; 70; 79; 55; 75; 35; 50 node[shape = doublecircle fontname = lato style = filled fillcolor = White] 22; 31; 32; 48; 36; 20; 30 node[shape = folder style = filled fillcolor = Gainsboro] Gnv; GS; TyGS; BGS; ThGS; SGS edge[fontname = lato penwidth = 0.2] Gary-&gt;Gnv [label = &#39;start&#39;]; Gnv-&gt;55 [label = &#39;if L &gt;=&#39;] 55-&gt;75 [label = &#39;and L &lt;=&#39;] 75-&gt;30 [label = &#39;and if W &gt;=&#39;] 30-&gt;36 [label = &#39;and W &lt;=&#39;] 36-&gt;ThGS [label = &#39;then&#39;] Gnv-&gt;35 [label = &#39;if L &gt;=&#39;] 35-&gt;50 [label = &#39;and L &lt;=&#39;] 50-&gt;20 [label = &#39;and if W &gt;=&#39;] 20-&gt;30 [label = &#39;and W &lt;=&#39;] 30-&gt;SGS [label = &#39;then&#39;] Gnv-&gt;45 [label = &#39;if L &gt;=&#39;] 45-&gt;70 [label = &#39;and L &lt;=&#39;] 70-&gt;22 [label = &#39;and if W &gt;=&#39;] 22-&gt;31 [label = &#39;and W &lt;=&#39;] 31-&gt;GS [label = &#39;then&#39;] 45-&gt;79 [label = &#39;and L &lt;=&#39;] 79-&gt;22 [label = &#39;and if W &gt;=&#39;] 31-&gt;TyGS [label = &#39;then&#39;] 70-&gt;32 [label = &#39;and if W &gt;=&#39;] 32-&gt;48 [label = &#39;and W &lt;=&#39;] 48-&gt;BGS [label = &#39;then&#39;] graph[nodesep = 0.75] } &quot;) Figure 4.2: Logic graph used to visualize the process of assigning type-varieties based upon linear metrics. Data for Gary dart points from the Jaketown site have not yet been collected, and are substituted with those data from the Poverty Point site. # subset poverty point data jmx&lt;-subset(data,Site==&quot;Pov Pt&quot;,select=maxl:maxstw) # assign varieties based upon reported metrics in Ford, Phillips, and Haag [1954] fphlcheck1 &lt;- jmx$maxl &gt;= 45 &amp; jmx$maxl &lt;= 70 fphlcheck2 &lt;- jmx$maxl &gt;= 45 &amp; jmx$maxl &lt;= 79 fphlcheck3 &lt;- jmx$maxl &gt;= 45 &amp; jmx$maxl &lt;= 70 fphlcheck4 &lt;- jmx$maxl &gt;= 55 &amp; jmx$maxl &lt;= 75 fphlcheck5 &lt;- jmx$maxl &gt;= 35 &amp; jmx$maxl &lt;= 50 fphwcheck1 &lt;- jmx$maxw &gt;= 22 &amp; jmx$maxw &lt;= 31 fphwcheck2 &lt;- jmx$maxw &gt;= 22 &amp; jmx$maxw &lt;= 31 fphwcheck3 &lt;- jmx$maxw &gt;= 32 &amp; jmx$maxw &lt;= 48 fphwcheck4 &lt;- jmx$maxw &gt;= 30 &amp; jmx$maxw &lt;= 36 fphwcheck5 &lt;- jmx$maxw &gt;= 20 &amp; jmx$maxw &lt;= 30 jmx$tv0 &lt;- &quot;Gnv&quot; # = Gary points (no variety) jmx$tv0 &lt;- ifelse(fphlcheck1 &amp; fphwcheck1, &quot;GS&quot;, jmx$tv0) jmx$tv0 &lt;- ifelse(fphlcheck2 &amp; fphwcheck2, &quot;TyGS&quot;, jmx$tv0) jmx$tv0 &lt;- ifelse(fphlcheck3 &amp; fphwcheck3, &quot;BGS&quot;, jmx$tv0) jmx$tv0 &lt;- ifelse(fphlcheck4 &amp; fphwcheck4, &quot;ThGS&quot;, jmx$tv0) jmx$tv0 &lt;- ifelse(fphlcheck5 &amp; fphwcheck5, &quot;SGS&quot;, jmx$tv0) tv0&lt;-jmx$tv0 tv0 ## [1] &quot;Gnv&quot; &quot;TyGS&quot; &quot;ThGS&quot; &quot;ThGS&quot; &quot;TyGS&quot; &quot;Gnv&quot; &quot;TyGS&quot; &quot;ThGS&quot; &quot;TyGS&quot; &quot;ThGS&quot; ## [11] &quot;ThGS&quot; &quot;ThGS&quot; &quot;ThGS&quot; &quot;ThGS&quot; &quot;ThGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;ThGS&quot; &quot;TyGS&quot; ## [21] &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;ThGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;ThGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; ## [31] &quot;ThGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;BGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; ## [41] &quot;TyGS&quot; &quot;TyGS&quot; &quot;TyGS&quot; &quot;SGS&quot; &quot;SGS&quot; &quot;SGS&quot; &quot;BGS&quot; &quot;SGS&quot; &quot;Gnv&quot; &quot;SGS&quot; ## [51] &quot;SGS&quot; &quot;SGS&quot; &quot;BGS&quot; &quot;SGS&quot; &quot;Gnv&quot; &quot;SGS&quot; &quot;SGS&quot; &quot;SGS&quot; &quot;Gnv&quot; &quot;SGS&quot; ## [61] &quot;SGS&quot; &quot;SGS&quot; &quot;SGS&quot; &quot;SGS&quot; 4.4 Boxplots for site by Ford, Phillips, and Haag’s (1955) Gary type-varieties # boxplot of maximum length jmaxl&lt;-ggplot(jmx,aes(x=tv0,y=maxl,color=tv0)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of maximum width jmaxw&lt;-ggplot(jmx,aes(x=tv0,y=maxw,color=tv0)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of maximum thickness jmaxth&lt;-ggplot(jmx,aes(x=tv0,y=maxth,color=tv0)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of maximum stem length jmaxstl&lt;-ggplot(jmx,aes(x=tv0,y=maxstl,color=tv0)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) # boxplot of maximum thickness jmaxstw&lt;-ggplot(jmx,aes(x=tv0,y=maxstw,color=tv0)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3)+ scale_color_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) # render figure jfigure&lt;-ggarrange(jmaxl,jmaxw,jmaxth,jmaxstl,jmaxstw, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;), ncol = 3, nrow = 2) ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. jfigure Figure 4.3: Boxplots for maximum a, length; b, width; c, thickness; d, stem length; and e, stem width for Gary dart points assigned to the Ford, Phillips, and Haag type-varieties. 4.5 Density plots for variables by type-varieties 4.5.1 Density plot for maximum length by tv0 # define variables in jaketown subset j.maxl&lt;-jmx$maxl j.maxw&lt;-jmx$maxw j.maxth&lt;-jmx$maxth j.maxstl&lt;-jmx$maxstl j.maxstw&lt;-jmx$maxstw j.tv0&lt;-jmx$tv0 # density plot of maxl by tv0 ggplot(jmx, aes(x=j.maxl, fill = j.tv0)) + geom_density(alpha = .4) + scale_color_brewer(palette = &quot;Set1&quot;) + xlim(0,140) #full range of variation included in the linear measurements associated with type-varieties 4.5.2 Density plot for maximum width by tv0 # density plot of maxw by tv0 ggplot(jmx, aes(x=j.maxw, fill = j.tv0)) + geom_density(alpha = .4) + scale_color_brewer(palette = &quot;Set1&quot;) + xlim(5,45) 4.5.3 Density plot for maximum thickness by tv0 # density plot of maxth by tv0 ggplot(jmx, aes(x=j.maxth, fill = j.tv0)) + geom_density(alpha = .4) + scale_color_brewer(palette = &quot;Set1&quot;) + xlim(0,25) 4.5.4 Density plot for maximum stem length by tv0 # density plot of maxstl by tv0 ggplot(jmx, aes(x=j.maxstl, fill = j.tv0)) + geom_density(alpha = .4) + scale_color_brewer(palette = &quot;Set1&quot;) + xlim(0,35) 4.5.5 Density plot for maximum stem width by tv0 # density plot of maxstw by tv0 ggplot(jmx, aes(x=j.maxstw, fill = j.tv0)) + geom_density(alpha = .4) + scale_color_brewer(palette = &quot;Set1&quot;) + xlim(0,45) 4.6 Principal Components Analysis for Ford, Phillips, and Haag’s (1955) type-varieties at all sites #pca df&lt;-jmx[c(1:5)] tv0pca&lt;-autoplot(prcomp(df),data = jmx, colour = &#39;tv0&#39;, loadings = TRUE, loadings.colour = &#39;blue&#39;, loadings.label = TRUE,loadings.label.size = 3, frame = TRUE) #render figure tv0pca Figure 4.4: PCA by Gary type-varieties reported by Ford, Phillips, and Haag (1955). 4.7 Analyses of Variance (ANOVA) for linear variables ~ type-varieties 4.7.1 Maximum length ~ type-variety at Jaketown # anova = maximum length ~ tv1 t0ml&lt;-lm.rrpp(j.maxl ~ j.tv0, SS.type = &quot;I&quot;,data = jmx,iter = 9999,print.progress = FALSE) anova(t0ml) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## j.tv0 4 3256.9 814.21 0.54881 17.942 3.9043 1e-04 *** ## Residuals 59 2677.5 45.38 0.45119 ## Total 63 5934.4 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = j.maxl ~ j.tv0, iter = 9999, SS.type = &quot;I&quot;, data = jmx, ## print.progress = FALSE) # visualise model predictions for maximum length ~ type-variety at poverty point j.tvDF&lt;-data.frame(j.tv0 = c(&quot;GS&quot;,&quot;TyGS&quot;,&quot;BGS&quot;,&quot;ThGS&quot;,&quot;SGS&quot;)) rownames(j.tvDF)&lt;-c(&quot;GS&quot;,&quot;TyGS&quot;,&quot;BGS&quot;,&quot;ThGS&quot;,&quot;SGS&quot;) jPreds&lt;-predict(t0ml,j.tvDF) jPreds ## ## Linear Model fit with lm.rrpp ## ## Number of predictions: 5 ## Confidence level: 95 % ## Number of bootstrap permutations: 10000 ## ## Predicted values: ## ## [,1] ## GS 49.71877 ## TyGS 64.83232 ## BGS 49.71877 ## ThGS 45.20059 ## SGS 57.95582 ## ## ## 95 % Lower confidence limits: ## ## [,1] ## GS 43.52476 ## TyGS 61.39407 ## BGS 43.52476 ## ThGS 42.09993 ## SGS 52.72822 ## ## ## 95 % Upper confidence limits: ## ## [,1] ## GS 57.18866 ## TyGS 68.52566 ## BGS 57.18866 ## ThGS 48.63331 ## SGS 64.15411 plot(jPreds, col = 1:NROW(j.tvDF)) # pairwise comparison of LS means = which sites differ? j.ml&lt;-pairwise(t0ml, groups = jmx$tv0) summary(j.ml, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: BGS Gnv SGS ThGS TyGS ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## BGS:Gnv 8.202000 13.835433 0.5788008 0.2587 ## BGS:SGS 4.573750 11.707552 -0.1022504 0.4702 ## BGS:ThGS 15.042308 12.061641 2.7000891 0.0120 ## BGS:TyGS 9.255926 11.288278 1.2857534 0.1202 ## Gnv:SGS 12.775750 9.809825 2.9163694 0.0095 ## Gnv:ThGS 6.840308 10.014023 0.8753376 0.1874 ## Gnv:TyGS 1.053926 9.128011 -0.9891383 0.8316 ## SGS:ThGS 19.616058 6.970952 7.8126181 0.0001 ## SGS:TyGS 13.829676 5.946205 6.2588412 0.0001 ## ThGS:TyGS 5.786382 6.420657 1.6093651 0.0774 # correlation between mean vectors (angles in degrees) summary(j.ml, confidence = 0.95, test.type = &quot;VC&quot;, angle.type = &quot;deg&quot;) ## ## Pairwise comparisons ## ## Groups: BGS Gnv SGS ThGS TyGS ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise statistics based on mean vector correlations ## r angle UCL (95%) Z Pr &gt; angle ## BGS:Gnv 1 8.537736e-07 8.537736e-07 1.2222743 0.20100 ## BGS:SGS 1 0.000000e+00 8.537736e-07 -0.7539312 0.68400 ## BGS:ThGS 1 0.000000e+00 8.537736e-07 -0.7444567 0.68110 ## BGS:TyGS 1 0.000000e+00 8.537736e-07 -0.7334114 0.67770 ## Gnv:SGS 1 8.537736e-07 8.537736e-07 1.1610444 0.21350 ## Gnv:ThGS 1 8.537736e-07 8.537736e-07 1.1738057 0.21080 ## Gnv:TyGS 1 8.537736e-07 8.537736e-07 1.1891737 0.20765 ## SGS:ThGS 1 0.000000e+00 8.537736e-07 -0.7747801 0.69070 ## SGS:TyGS 1 0.000000e+00 8.537736e-07 -0.7637240 0.68735 ## ThGS:TyGS 1 0.000000e+00 8.537736e-07 -0.7563550 0.68505 # pairwise distances between variances = standardization? summary(j.ml, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: BGS Gnv SGS ThGS TyGS ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## BGS Gnv SGS ThGS TyGS ## 10.95407 231.98634 10.77216 21.79628 38.11191 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## BGS:Gnv 221.0322693 137.39099 4.2931918 0.0031 ## BGS:SGS 0.1819057 109.58685 -0.9993246 0.9968 ## BGS:ThGS 10.8422126 111.33476 -0.7057040 0.7970 ## BGS:TyGS 27.1578390 108.26801 -0.2195305 0.5106 ## Gnv:SGS 221.2141751 89.64848 6.9274689 0.0001 ## Gnv:ThGS 210.1900567 90.29874 6.3047705 0.0001 ## Gnv:TyGS 193.8744304 87.76304 6.2407980 0.0003 ## SGS:ThGS 11.0241184 57.66377 -0.7530169 0.7207 ## SGS:TyGS 27.3397447 47.35996 0.4626217 0.2943 ## ThGS:TyGS 16.3156263 51.91995 -0.3638797 0.5677 # anova = maximum length ~ tv0 t0ml&lt;-lm.rrpp(maxl ~ tv0, SS.type = &quot;I&quot;,data = jmx,iter = 9999,print.progress = FALSE) anova(t0ml) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## tv0 4 3256.9 814.21 0.54881 17.942 3.9043 1e-04 *** ## Residuals 59 2677.5 45.38 0.45119 ## Total 63 5934.4 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = maxl ~ tv0, iter = 9999, SS.type = &quot;I&quot;, data = jmx, ## print.progress = FALSE) # anova = maximum width ~ tv0 t0mw&lt;-lm.rrpp(maxw ~ tv0, SS.type = &quot;I&quot;,data = jmx,iter = 9999,print.progress = FALSE) anova(t0mw) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## tv0 4 570.85 142.712 0.48489 13.885 3.4853 1e-04 *** ## Residuals 59 606.41 10.278 0.51511 ## Total 63 1177.26 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = maxw ~ tv0, iter = 9999, SS.type = &quot;I&quot;, data = jmx, ## print.progress = FALSE) # anova = maximum thickness ~ tv0 t0mth&lt;-lm.rrpp(maxth ~ tv0, SS.type = &quot;I&quot;,data = jmx,iter = 9999,print.progress = FALSE) anova(t0mth) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## tv0 4 34.118 8.5295 0.12858 2.1765 1.2448 0.0835 . ## Residuals 59 231.217 3.9189 0.87142 ## Total 63 265.335 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = maxth ~ tv0, iter = 9999, SS.type = &quot;I&quot;, data = jmx, ## print.progress = FALSE) # anova = maximum stem length ~ tv0 t0mstl&lt;-lm.rrpp(maxstl ~ tv0, SS.type = &quot;I&quot;,data = jmx,iter = 9999,print.progress = FALSE) anova(t0mstl) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## tv0 4 143.33 35.832 0.1819 3.2796 1.7418 0.0197 * ## Residuals 59 644.61 10.926 0.8181 ## Total 63 787.94 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = maxstl ~ tv0, iter = 9999, SS.type = &quot;I&quot;, data = jmx, ## print.progress = FALSE) # anova = maximum stem width ~ tv0 t0mstw&lt;-lm.rrpp(maxstw ~ tv0, SS.type = &quot;I&quot;,data = jmx,iter = 9999,print.progress = FALSE) anova(t0mstw) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## tv0 4 110.27 27.568 0.14201 2.4414 1.3848 0.057 . ## Residuals 59 666.22 11.292 0.85799 ## Total 63 776.50 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: lm.rrpp(f1 = maxstw ~ tv0, iter = 9999, SS.type = &quot;I&quot;, data = jmx, ## print.progress = FALSE) References "]
]
